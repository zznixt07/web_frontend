/*
  1. Use a more-intuitive box-sizing model.
*/
*, *::before, *::after {
  box-sizing: border-box;
}
/*
  2. Remove default margin
*/
* {
  margin: 0;
}
/*
  3. Allow percentage-based heights in the application
*/
html, body {
  height: 100%;
}
/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
  6. Improve media defaults
*/
img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}
/*
  7. Remove built-in form typography styles
*/
input, button, textarea, select {
  font: inherit;
}
/*
  8. Avoid text overflows
*/
p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}
/*
  9. Create a root stacking context
*/
#root, #__next {
  isolation: isolate;
}

/* source: https://web.dev/building-a-color-scheme/ */
html {
    /* brand foundation */
    --brand-hue: 195;
    --brand-saturation: 96%;
    --brand-lightness: 90%;
    --surface-shadow-light: var(--brand-hue) 10% 20%;
    --shadow-strength-light: .02;

    /* light */
    --brand-light: hsl(
        var(--brand-hue) var(--brand-saturation) var(--brand-lightness)
    );
    --text1-light: hsl(var(--brand-hue) var(--brand-saturation) 10%);
    --text2-light: hsl(var(--brand-hue) 30% 10%);
    --surface1-light: hsl(var(--brand-hue) 25% 99%);
    --surface2-light: hsl(var(--brand-hue) 20% 99%);
    --surface3-light: hsl(var(--brand-hue) 20% 92%);
    --surface4-light: hsl(var(--brand-hue) 20% 85%);
    --surface-shadow-light: var(--brand-hue) 10%
        calc(var(--brand-lightness) / 5);
    --shadow-strength-light: 0.02;

    /* dark */
    --brand-dark: hsl(
        var(--brand-hue) calc(var(--brand-saturation) / 2)
            calc(var(--brand-saturation) / 1.5)
    );
    --text1-dark: hsl(var(--brand-hue) 15% 85%);
    --text2-dark: hsl(var(--brand-hue) 5% 65%);
    --surface1-dark: hsl(var(--brand-hue) 10% 10%);
    --surface2-dark: hsl(var(--brand-hue) 10% 15%);
    --surface3-dark: hsl(var(--brand-hue) 5% 20%);
    --surface4-dark: hsl(var(--brand-hue) 5% 25%);
    --surface-shadow-dark: var(--brand-hue) 50% 3%;
    --shadow-strength-dark: 0.8;

    /* dim */
    --brand-dim: hsl(
        var(--brand-hue) calc(var(--brand-saturation) / 1.25)
            calc(var(--brand-lightness) / 1.25)
    );
    --text1-dim: hsl(var(--brand-hue) 15% 75%);
    --text2-dim: hsl(var(--brand-hue) 10% 61%);
    --surface1-dim: hsl(var(--brand-hue) 10% 20%);
    --surface2-dim: hsl(var(--brand-hue) 10% 25%);
    --surface3-dim: hsl(var(--brand-hue) 5% 30%);
    --surface4-dim: hsl(var(--brand-hue) 5% 35%);
    --surface-shadow-dim: var(--brand-hue) 30% 13%;
    --shadow-strength-dim: 0.2;
}

:root,
[color-scheme='light'] {
    color-scheme: light;

    --brand: var(--brand-light);
    --text1: var(--text1-light);
    --text2: var(--text2-light);
    --surface1: var(--surface1-light);
    --surface2: var(--surface2-light);
    --surface3: var(--surface3-light);
    --surface4: var(--surface4-light);
    --surface-shadow: var(--surface-shadow-light);
    --shadow-strength: var(--shadow-strength-light);
}

[color-scheme='dark'] {
    color-scheme: dark;

    --brand: var(--brand-dark);
    --text1: var(--text1-dark);
    --text2: var(--text2-dark);
    --surface1: var(--surface1-dark);
    --surface2: var(--surface2-dark);
    --surface3: var(--surface3-dark);
    --surface4: var(--surface4-dark);
    --surface-shadow: var(--surface-shadow-dark);
    --shadow-strength: var(--shadow-strength-dark);
}


@media (prefers-color-scheme: dark) {
    :root {
        color-scheme: dark;

        --brand: var(--brand-dark);
        --text1: var(--text1-dark);
        --text2: var(--text2-dark);
        --surface1: var(--surface1-dark);
        --surface2: var(--surface2-dark);
        --surface3: var(--surface3-dark);
        --surface4: var(--surface4-dark);
        --surface-shadow: var(--surface-shadow-dark);
        --shadow-strength: var(--shadow-strength-dark);
    }
}

[color-scheme='dim'] {
    color-scheme: dim;

    --brand: var(--brand-dim);
    --text1: var(--text1-dim);
    --text2: var(--text2-dim);
    --surface1: var(--surface1-dim);
    --surface2: var(--surface2-dim);
    --surface3: var(--surface3-dim);
    --surface4: var(--surface4-dim);
    --surface-shadow: var(--surface-shadow-dim);
    --shadow-strength: var(--shadow-strength-dim);
}

.rad-shadow {
  box-shadow:
    0 2.8px 2.2px hsl(var(--surface-shadow) / calc(var(--shadow-strength) + .03)),
    0 6.7px 5.3px hsl(var(--surface-shadow) / calc(var(--shadow-strength) + .01)),
    0 12.5px 10px hsl(var(--surface-shadow) / calc(var(--shadow-strength) + .02)),
    0 22.3px 17.9px hsl(var(--surface-shadow) / calc(var(--shadow-strength) + .02)),
    0 41.8px 33.4px hsl(var(--surface-shadow) / calc(var(--shadow-strength) + .03)),
    0 100px 80px hsl(var(--surface-shadow) / var(--shadow-strength))
  ;
}

body {
  font-family: 'Roboto', sans-serif;
}

button {
  /* background-color: transparent; */
  /* font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  font-weight: inherit;
  line-height: inherit; */
  /* padding: 0.1 0.5rem; */
  /* border-radius: 0.3rem; */
  /* border-width: 0; */
}

a {
  color: inherit;
  text-decoration: inherit; /* no underline */
}

/*img {
  object-fit: cover;
}*/

.rounded {
  border-radius: 50%;
}

/* sauce: https://css-tricks.com/inclusively-hidden/#screen-reader-only*/
/* Hiding class, making content visible only to screen readers but not visually */
/* "sr" meaning "screen-reader" */
.sr-only {
  clip: rect(0 0 0 0); 
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap; 
  width: 1px;
}

input {
  width: inherit;
  padding: 0.3rem;
  border-radius: 0.3rem;
  border: none;
}

#root {
  height: inherit;
}